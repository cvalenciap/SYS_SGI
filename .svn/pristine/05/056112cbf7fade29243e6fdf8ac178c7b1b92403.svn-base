@using SYS_SGI.Presentation.Utilities;
@using SYS_SGI.Domain.Implementation.Common.Base;
@using SYS_SGI.Domain.Implementation.LogicalEntities.PAR;

@model GMD.CustomHtmlHelpers.HtmlGenericGrid.GMDGridModel<ParametroLogic>
@{
    var listTmp = (List<SYS_SGI.Presentation.Models.System.VMPermisosSystem.PermisoControlador>)this.Session[SYS_SGI.Presentation.Utilities.Constantes.Sesion.Permisos.Lista_PermisosControlador];
    var permiso = listTmp.Where(x => x.Controlador == @ViewContext.RouteData.Values["controller"].ToString()).Select(s => s.CodigoAccion).ToList()[0];

    var grid = new GMDGrid<ParametroLogic>("ggmParametro", Model) { callBackMethod = "refrescarggmParametro", _overflowx = true, tableHtmlAttributes = new { @class = "grid-gmd" } };
    grid.columnCollection.addColumn(_headerText: "Item", _isFilterable: false, _isSortable: false, _format: @<text><span title="@item.NumFila">@item.NumFila</span></text>, _htmlAttributes: new { @width = "5%" });
    grid.columnCollection.addColumn(_headerText: "Orden", _isSortable: false, _isFilterable: false, _format: item => item.Orden, _htmlAttributes: new { @width = "5%" });
    grid.columnCollection.addColumn(_headerText: "Nombre", _filterKey: "Nombre", _format: item => item.Nombre);
    grid.columnCollection.addColumn(_headerText: "Nombre Corto", _filterKey: "NombreCorto", _format: item => item.NombreCorto);
    grid.columnCollection.addColumn(_headerText: "Valor", _isSortable: false, _isFilterable: false, _format: item => item.Valor, _htmlAttributes: new { @width = "5%" });
    grid.columnCollection.addColumn(_headerText: "Estado", _isFilterable: false, _isSortable: false, _format: item => item.Estado ? Enums.Estado.Activo : Enums.Estado.Inactivo, _htmlAttributes: new { @width = "5%" });
    grid.columnCollection.addColumn(_headerText: "Acciones", _isFilterable: false, _isSortable: false, _format: @<text>
        <div class="acciones_grilla">
            @Ajax.RawActionLink(string.Format("<span title = \"Detalle Parámetro\" class=\"glyphicon glyphicon-th-list\"></span>"), "Index", "ParametroDetalle", new { codigoParametro = item.CodigoParametro, nombreParametro = "ParametroSistema", titulo = item.Nombre }, new AjaxOptions
        {
            UpdateTargetId = "divLayoutBody",
            HttpMethod = "post"
        }, new { id = "lnkNDP" })

            @Ajax.RawActionLink(string.Format("<span title = \"Editar\" class=\"glyphicon glyphicon-pencil\"></span>"), "Mantenimiento", "ParametroSistema", new { codigoParametro = item.CodigoParametro }, new AjaxOptions
       {
           UpdateTargetId = "divModalBodyParametro",
           OnBegin = "mostrarModal('Editar', 'divModalBodyParametro','idModalManParametro', undefined, 'SIZE_WIDE');",
           HttpMethod = "post"
       }, new { id = "lnkEdit", style = "cursor:pointer;" + (permiso >= (int)Constantes.Permisos.Codigo.Escritura ? Constantes.Permisos.Style.Activo : Constantes.Permisos.Style.Desactivo) })
        </div>
   
    </text>, _htmlAttributes: new { @width = "100px" });
}
@grid.GetHtml()
